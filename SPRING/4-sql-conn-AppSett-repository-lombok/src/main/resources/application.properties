#### SQL ####

############################
# MYSQL

# Database Configuration
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/testdb
spring.datasource.username=root
spring.datasource.password=javau7
# Database driver class name configuration
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
############################

############################
# POSTGRESQL

# Database Configuration
#spring.datasource.url=jdbc:postgresql://host_name:5432/<database-name>
#spring.datasource.username=your_postgres_username
#spring.datasource.password=your_postgres_password
# Database driver class name configuration
#spring.datasource.driver-class-name=org.postgresql.Driver
############################

############################
# JPA / HIBERNATE SETUP

# "spring.jpa.hibernate.ddl-auto" - This property configures the automatic generation of database schemas by Hibernate.
# "update" - this specific value means that Hibernate will attempt to update the database schema during the
# application startup. It adds new tables, columns, and constraints, but it won't remove existing ones or modify data.
# "create" - This specific value means that Hibernate will attempt to create the necessary database tables when
# the application starts. If the tables already exist, Hibernate might drop them and recreate them, potentially
# leading to data loss. This setting is generally used during development or testing phases.
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create

# "spring.jpa.properties.hibernate.dialect" - This property allows you to set additional Hibernate properties,
# and in this case, it's used to specify the dialect.
# "org.hibernate.dialect.MySQLDialect" -  This is the fully qualified class name of the Hibernate
# dialect for MySQL databases.
# "org.hibernate.dialect.PostgreSQLDialect" - This is the fully qualified class name of the Hibernate
# dialect for PostgreSQL databases.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
############################

############################
# logging.level SETUP FOR SQL

# "logging.level.org.hibernate.SQL=debug" - this sets the log level for the org.hibernate.SQL category to debug.
# In Hibernate, this category is typically used to log SQL statements that are executed by the framework.
# Setting it to debug means that you'll get detailed information about the SQL statements being executed,
# which can be helpful for debugging and performance tuning
logging.level.org.hibernate.SQL=debug

# "logging.level.org.hibernate.orm.jdbc.bind=trace" - This sets the log level for the org.hibernate.orm.jdbc.bind
# category to trace. This category is often used for logging information related to parameter binding in SQL
# statements. Setting it to trace means you'll get even more detailed information about how parameters are bound
# in prepared statements
logging.level.org.hibernate.orm.jdbc.bind=trace
############################


############################
# Turn off SPRING BOOT banner in console when loading
spring.main.banner-mode=off
############################